{"version":3,"names":["ensureUnit","Native","queryStatisticsCollectionForQuantity","identifier","options","from","to","unit","actualUnit","toDate","Date","rawResponse","toISOString","response","map","record","startDate","endDate"],"sources":["queryStatisticsCollectionForQuantity.ts"],"sourcesContent":["import ensureUnit from './ensureUnit'\nimport Native from '../native-types'\n\nimport type { HKQuantityTypeIdentifier, HKStatisticsOptions, UnitForIdentifier } from '../native-types'\n\nasync function queryStatisticsCollectionForQuantity<TIdentifier extends HKQuantityTypeIdentifier, TUnit extends UnitForIdentifier<TIdentifier> = UnitForIdentifier<TIdentifier>>(\n  identifier: TIdentifier,\n  options: readonly HKStatisticsOptions[],\n  from: Date,\n  to?: Date,\n  unit?: TUnit\n) {\n  const actualUnit = await ensureUnit(identifier, unit)\n  const toDate = to || new Date()\n\n  const rawResponse = await Native.queryStatisticsCollectionForQuantity(\n    identifier,\n    actualUnit,\n    from.toISOString(),\n    toDate.toISOString(),\n    options\n  )\n\n  const response = rawResponse.map((record) => {\n    record.startDate = new Date(record.startDate)\n    record.endDate = new Date(record.endDate)\n    return record\n  })\n\n  return response\n}\n\nexport default queryStatisticsCollectionForQuantity\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,MAAM,MAAM,iBAAiB;AAIpC,eAAeC,oCAAoCA,CACjDC,UAAuB,EACvBC,OAAuC,EACvCC,IAAU,EACVC,EAAS,EACTC,IAAY,EACZ;EACA,MAAMC,UAAU,GAAG,MAAMR,UAAU,CAACG,UAAU,EAAEI,IAAI,CAAC;EACrD,MAAME,MAAM,GAAGH,EAAE,IAAI,IAAII,IAAI,CAAC,CAAC;EAE/B,MAAMC,WAAW,GAAG,MAAMV,MAAM,CAACC,oCAAoC,CACnEC,UAAU,EACVK,UAAU,EACVH,IAAI,CAACO,WAAW,CAAC,CAAC,EAClBH,MAAM,CAACG,WAAW,CAAC,CAAC,EACpBR,OACF,CAAC;EAED,MAAMS,QAAQ,GAAGF,WAAW,CAACG,GAAG,CAAEC,MAAM,IAAK;IAC3CA,MAAM,CAACC,SAAS,GAAG,IAAIN,IAAI,CAACK,MAAM,CAACC,SAAS,CAAC;IAC7CD,MAAM,CAACE,OAAO,GAAG,IAAIP,IAAI,CAACK,MAAM,CAACE,OAAO,CAAC;IACzC,OAAOF,MAAM;EACf,CAAC,CAAC;EAEF,OAAOF,QAAQ;AACjB;AAEA,eAAeX,oCAAoC"}