{"version":3,"names":["ensureMetadata","Native","saveCorrelationSample","typeIdentifier","samples","options","start","Date","toISOString","end","map","s","metadata"],"sources":["saveCorrelationSample.ts"],"sourcesContent":["import ensureMetadata from './ensureMetadata'\nimport Native from '../native-types'\n\nimport type { MetadataMapperForCorrelationIdentifier, HKCorrelationTypeIdentifier } from '../native-types'\nimport type { HKCategorySampleForSaving, HKQuantitySampleForSaving } from '../types'\n\nasync function saveCorrelationSample<\n  TIdentifier extends HKCorrelationTypeIdentifier,\n  TSamples extends readonly(\n    | HKCategorySampleForSaving\n    | HKQuantitySampleForSaving\n  )[]\n>(\n  typeIdentifier: TIdentifier,\n  samples: TSamples,\n  options?: {\n    readonly start?: Date;\n    readonly end?: Date;\n    readonly metadata?: MetadataMapperForCorrelationIdentifier<TIdentifier>;\n  },\n) {\n  const start = (options?.start || new Date()).toISOString()\n  const end = (options?.end || new Date()).toISOString()\n\n  return Native.saveCorrelationSample(\n    typeIdentifier,\n    samples.map((s) => ({ ...s, metadata: ensureMetadata(s.metadata) })),\n    start,\n    end,\n    ensureMetadata(options?.metadata),\n  )\n}\n\nexport default saveCorrelationSample\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,MAAM,MAAM,iBAAiB;AAKpC,eAAeC,qBAAqBA,CAOlCC,cAA2B,EAC3BC,OAAiB,EACjBC,OAIC,EACD;EACA,MAAMC,KAAK,GAAG,CAAC,CAAAD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,KAAK,KAAI,IAAIC,IAAI,CAAC,CAAC,EAAEC,WAAW,CAAC,CAAC;EAC1D,MAAMC,GAAG,GAAG,CAAC,CAAAJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,GAAG,KAAI,IAAIF,IAAI,CAAC,CAAC,EAAEC,WAAW,CAAC,CAAC;EAEtD,OAAOP,MAAM,CAACC,qBAAqB,CACjCC,cAAc,EACdC,OAAO,CAACM,GAAG,CAAEC,CAAC,KAAM;IAAE,GAAGA,CAAC;IAAEC,QAAQ,EAAEZ,cAAc,CAACW,CAAC,CAACC,QAAQ;EAAE,CAAC,CAAC,CAAC,EACpEN,KAAK,EACLG,GAAG,EACHT,cAAc,CAACK,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEO,QAAQ,CAClC,CAAC;AACH;AAEA,eAAeV,qBAAqB"}