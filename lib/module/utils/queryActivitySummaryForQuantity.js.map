{"version":3,"names":["ensureUnit","prepareOptions","Native","HKQuantityTypeIdentifier","queryActivitySummaryForQuantity","options","energyUnit","activeEnergyBurned","e","console","error","timeUnit","appleMoveTime","log","JSON","stringify","getPreferredUnits","dietaryEnergyConsumed","timeInDaylight","undefined","opts","result","from","to","map","record","startDate","Date"],"sources":["queryActivitySummaryForQuantity.ts"],"sourcesContent":["import ensureUnit from './ensureUnit'\nimport prepareOptions from './prepareOptions'\nimport Native from '../native-types'\n\nimport {\n  HKQuantityTypeIdentifier, UnitOfEnergy, UnitOfTime,\n} from '../native-types'\nimport type { GenericQueryOptions, QueryActivitySummaryForQuantityRaw } from '../types'\n\nexport type QueryActivitySummaryForQuantityFn = <\n  TEnergyUnit extends UnitOfEnergy,\n  TTimeUnit extends UnitOfTime\n>(\n  options: Omit<GenericQueryOptions, 'anchor' | 'ascending' | 'limit'> & {\n    readonly energyUnit?: TEnergyUnit,\n    readonly timeUnit?: TTimeUnit\n  }\n) => Promise<QueryActivitySummaryForQuantityRaw<TEnergyUnit, TTimeUnit>>;\n\nconst queryActivitySummaryForQuantity: QueryActivitySummaryForQuantityFn = async (\n  options,\n) => {\n  try {\n    const energyUnit = await ensureUnit(HKQuantityTypeIdentifier.activeEnergyBurned, options.energyUnit)\n  } catch (e) {\n    console.error(e)\n  }\n  const energyUnit = await ensureUnit(HKQuantityTypeIdentifier.activeEnergyBurned, options.energyUnit)\n  const timeUnit = await ensureUnit(HKQuantityTypeIdentifier.appleMoveTime, options.timeUnit)\n  console.log(\"units:\", energyUnit, timeUnit)\n  console.log(\"preffered units:\", JSON.stringify(\n    await Native.getPreferredUnits([HKQuantityTypeIdentifier.dietaryEnergyConsumed, HKQuantityTypeIdentifier.timeInDaylight]),\n    undefined,\n    2\n  ))\n\n  const opts = prepareOptions(options)\n\n  const result = await Native.queryActivitySummaryForQuantity(\n    energyUnit,\n    timeUnit,\n    opts.from,\n    opts.to\n  )\n\n  return result.map((record) => {\n    record.startDate = new Date(record.startDate)\n    return record\n  })\n}\n\nexport default queryActivitySummaryForQuantity\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,SACEC,wBAAwB,QACnB,iBAAiB;AAaxB,MAAMC,+BAAkE,GAAG,MACzEC,OAAO,IACJ;EACH,IAAI;IACF,MAAMC,UAAU,GAAG,MAAMN,UAAU,CAACG,wBAAwB,CAACI,kBAAkB,EAAEF,OAAO,CAACC,UAAU,CAAC;EACtG,CAAC,CAAC,OAAOE,CAAC,EAAE;IACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;EAClB;EACA,MAAMF,UAAU,GAAG,MAAMN,UAAU,CAACG,wBAAwB,CAACI,kBAAkB,EAAEF,OAAO,CAACC,UAAU,CAAC;EACpG,MAAMK,QAAQ,GAAG,MAAMX,UAAU,CAACG,wBAAwB,CAACS,aAAa,EAAEP,OAAO,CAACM,QAAQ,CAAC;EAC3FF,OAAO,CAACI,GAAG,CAAC,QAAQ,EAAEP,UAAU,EAAEK,QAAQ,CAAC;EAC3CF,OAAO,CAACI,GAAG,CAAC,kBAAkB,EAAEC,IAAI,CAACC,SAAS,CAC5C,MAAMb,MAAM,CAACc,iBAAiB,CAAC,CAACb,wBAAwB,CAACc,qBAAqB,EAAEd,wBAAwB,CAACe,cAAc,CAAC,CAAC,EACzHC,SAAS,EACT,CACF,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAGnB,cAAc,CAACI,OAAO,CAAC;EAEpC,MAAMgB,MAAM,GAAG,MAAMnB,MAAM,CAACE,+BAA+B,CACzDE,UAAU,EACVK,QAAQ,EACRS,IAAI,CAACE,IAAI,EACTF,IAAI,CAACG,EACP,CAAC;EAED,OAAOF,MAAM,CAACG,GAAG,CAAEC,MAAM,IAAK;IAC5BA,MAAM,CAACC,SAAS,GAAG,IAAIC,IAAI,CAACF,MAAM,CAACC,SAAS,CAAC;IAC7C,OAAOD,MAAM;EACf,CAAC,CAAC;AACJ,CAAC;AAED,eAAerB,+BAA+B"}