{"version":3,"names":["ensureUnit","prepareOptions","Native","EventEmitter","HKQuantityTypeIdentifier","UnitOfEnergy","UnitOfTime","queryActivitySummaryForQuantity","options","subscribe","Boolean","updateCallback","energyUnit","activeEnergyBurned","Joules","timeUnit","appleMoveTime","Seconds","opts","queryId","data","from","to","result","map","record","startDate","Date","onUpdate","update","_options$updateCallba","call","subscription","addListener","unsubscribe","remove","unsubscribeQuery"],"sources":["queryActivitySummaryForQuantity.ts"],"sourcesContent":["import ensureUnit from './ensureUnit'\nimport prepareOptions from './prepareOptions'\nimport Native, { EventEmitter } from '../native-types'\n\nimport {\n  HKQuantityTypeIdentifier, UnitOfEnergy, UnitOfTime,\n} from '../native-types'\nimport type { GenericQueryOptions, HKActivitySummary, QueryActivitySummaryResponse } from '../types'\n\nconst queryActivitySummaryForQuantity = async <\nTEnergyUnit extends UnitOfEnergy,\nTTimeUnit extends UnitOfTime\n>(\n  options: Omit<GenericQueryOptions, 'anchor' | 'ascending' | 'limit'> & {\n    readonly energyUnit?: TEnergyUnit,\n    readonly timeUnit?: TTimeUnit,\n    readonly updateCallback?: (data: HKActivitySummary<TEnergyUnit, TTimeUnit>[]) => void\n  },\n) => {\n  const subscribe = Boolean(options.updateCallback)\n  const energyUnit = await ensureUnit(HKQuantityTypeIdentifier.activeEnergyBurned, options.energyUnit)\n    ?? UnitOfEnergy.Joules\n  const timeUnit = await ensureUnit(HKQuantityTypeIdentifier.appleMoveTime, options.timeUnit)\n    ?? UnitOfTime.Seconds\n\n  const opts = prepareOptions(options)\n\n  const { queryId, data } = await Native.queryActivitySummaryForQuantity(\n    energyUnit,\n    timeUnit,\n    opts.from,\n    opts.to\n  )\n\n  const result: QueryActivitySummaryResponse<TEnergyUnit, TTimeUnit> = {\n    queryId,\n    data: data.map((record) => {\n      record.startDate = new Date(record.startDate)\n      return record as  (Omit<HKActivitySummary<TEnergyUnit, TTimeUnit>, \"startDate\"> & { startDate: Date })\n    })\n  }\n\n  if (subscribe) {\n    const onUpdate = (\n      update: { queryId: string, data: HKActivitySummary<TEnergyUnit, TTimeUnit>[] }\n    ) => {\n      if (update.queryId === queryId) {\n        options.updateCallback?.(update.data)\n      }\n    }\n    const subscription = EventEmitter.addListener('onActivitySummaryUpdate', onUpdate)\n    \n    result.unsubscribe = async () => {\n      subscription.remove()\n      return Native.unsubscribeQuery(result.queryId)\n    }\n  }\n\n  return result\n}\n\nexport default queryActivitySummaryForQuantity\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,MAAM,IAAIC,YAAY,QAAQ,iBAAiB;AAEtD,SACEC,wBAAwB,EAAEC,YAAY,EAAEC,UAAU,QAC7C,iBAAiB;AAGxB,MAAMC,+BAA+B,GAAG,MAItCC,OAIC,IACE;EACH,MAAMC,SAAS,GAAGC,OAAO,CAACF,OAAO,CAACG,cAAc,CAAC;EACjD,MAAMC,UAAU,GAAG,OAAMZ,UAAU,CAACI,wBAAwB,CAACS,kBAAkB,EAAEL,OAAO,CAACI,UAAU,CAAC,KAC/FP,YAAY,CAACS,MAAM;EACxB,MAAMC,QAAQ,GAAG,OAAMf,UAAU,CAACI,wBAAwB,CAACY,aAAa,EAAER,OAAO,CAACO,QAAQ,CAAC,KACtFT,UAAU,CAACW,OAAO;EAEvB,MAAMC,IAAI,GAAGjB,cAAc,CAACO,OAAO,CAAC;EAEpC,MAAM;IAAEW,OAAO;IAAEC;EAAK,CAAC,GAAG,MAAMlB,MAAM,CAACK,+BAA+B,CACpEK,UAAU,EACVG,QAAQ,EACRG,IAAI,CAACG,IAAI,EACTH,IAAI,CAACI,EACP,CAAC;EAED,MAAMC,MAA4D,GAAG;IACnEJ,OAAO;IACPC,IAAI,EAAEA,IAAI,CAACI,GAAG,CAAEC,MAAM,IAAK;MACzBA,MAAM,CAACC,SAAS,GAAG,IAAIC,IAAI,CAACF,MAAM,CAACC,SAAS,CAAC;MAC7C,OAAOD,MAAM;IACf,CAAC;EACH,CAAC;EAED,IAAIhB,SAAS,EAAE;IACb,MAAMmB,QAAQ,GACZC,MAA8E,IAC3E;MACH,IAAIA,MAAM,CAACV,OAAO,KAAKA,OAAO,EAAE;QAAA,IAAAW,qBAAA;QAC9B,CAAAA,qBAAA,GAAAtB,OAAO,CAACG,cAAc,cAAAmB,qBAAA,uBAAtBA,qBAAA,CAAAC,IAAA,CAAAvB,OAAO,EAAkBqB,MAAM,CAACT,IAAI,CAAC;MACvC;IACF,CAAC;IACD,MAAMY,YAAY,GAAG7B,YAAY,CAAC8B,WAAW,CAAC,yBAAyB,EAAEL,QAAQ,CAAC;IAElFL,MAAM,CAACW,WAAW,GAAG,YAAY;MAC/BF,YAAY,CAACG,MAAM,CAAC,CAAC;MACrB,OAAOjC,MAAM,CAACkC,gBAAgB,CAACb,MAAM,CAACJ,OAAO,CAAC;IAChD,CAAC;EACH;EAEA,OAAOI,MAAM;AACf,CAAC;AAED,eAAehB,+BAA+B"}