{"version":3,"names":["Platform","HKAuthorizationRequestStatus","HKAuthorizationStatus","HKBiologicalSex","HKBloodType","HKFitzpatrickSkinType","HKUnits","HKWheelchairUse","notAvailableError","OS","hasWarned","UnavailableFn","retVal","console","warn","Healthkit","authorizationStatusFor","Promise","resolve","notDetermined","disableAllBackgroundDelivery","disableBackgroundDelivery","enableBackgroundDelivery","getBiologicalSex","notSet","getBloodType","getDateOfBirth","Date","getFitzpatrickSkinType","getMostRecentCategorySample","getMostRecentQuantitySample","getMostRecentWorkout","getPreferredUnit","Count","getPreferredUnits","getRequestStatusForAuthorization","unknown","getWheelchairUse","getWorkoutRoutes","isHealthDataAvailable","queryCategorySamples","queryCategorySamplesWithAnchor","samples","deletedSamples","newAnchor","queryCorrelationSamples","queryHeartbeatSeriesSamples","queryHeartbeatSeriesSamplesWithAnchor","queryQuantitySamples","queryQuantitySamplesWithAnchor","queryStatisticsForQuantity","averageQuantity","undefined","maximumQuantity","minimumQuantity","sumQuantity","mostRecentQuantity","mostRecentQuantityDateInterval","duration","queryStatisticsCollectionForQuantity","queryActivitySummaryForQuantity","queryWorkouts","querySources","requestAuthorization","deleteQuantitySample","deleteSamples","saveCategorySample","saveCorrelationSample","saveQuantitySample","saveWorkoutSample","subscribeToChanges","useMostRecentCategorySample","useMostRecentQuantitySample","useMostRecentWorkout","useSubscribeToChanges","useHealthkitAuthorization","useIsHealthDataAvailable","canAccessProtectedData"],"sources":["index.tsx"],"sourcesContent":["import { Platform } from 'react-native'\n\nimport {\n  HKAuthorizationRequestStatus, HKAuthorizationStatus, HKBiologicalSex, HKBloodType, HKFitzpatrickSkinType, HKUnits, HKWheelchairUse, QueryQuantitySamplesResponseRaw,\n} from './native-types'\n\nimport type ReactNativeHealthkit from './index.ios'\nimport type { QueryCategorySamplesFn } from './utils/queryCategorySamples'\nimport type { QueryQuantitySamplesFn } from './utils/queryQuantitySamples'\n\nconst notAvailableError = `[@kingstinct/react-native-healthkit] Platform \"${\n  Platform.OS\n}\" not supported`\n\nlet hasWarned = false\n\nfunction UnavailableFn<T = unknown>(retVal: T) {\n  return () => {\n    if (!hasWarned) {\n      // eslint-disable-next-line no-console\n      console.warn(notAvailableError)\n      hasWarned = true\n    }\n    return retVal\n  }\n}\n\nconst Healthkit: typeof ReactNativeHealthkit = {\n  authorizationStatusFor: UnavailableFn(Promise.resolve(HKAuthorizationStatus.notDetermined)),\n  disableAllBackgroundDelivery: UnavailableFn(Promise.resolve(false)),\n  disableBackgroundDelivery: UnavailableFn(Promise.resolve(false)),\n  enableBackgroundDelivery: UnavailableFn(Promise.resolve(false)),\n  getBiologicalSex: UnavailableFn(Promise.resolve(HKBiologicalSex.notSet)),\n  getBloodType: UnavailableFn(Promise.resolve(HKBloodType.notSet)),\n  getDateOfBirth: UnavailableFn(Promise.resolve(new Date(0))),\n  getFitzpatrickSkinType: UnavailableFn(Promise.resolve(HKFitzpatrickSkinType.notSet)),\n  getMostRecentCategorySample: UnavailableFn(Promise.resolve(null)),\n  getMostRecentQuantitySample: UnavailableFn(Promise.resolve(null)),\n  getMostRecentWorkout: UnavailableFn(Promise.resolve(null)),\n  getPreferredUnit: UnavailableFn(Promise.resolve(HKUnits.Count)),\n  getPreferredUnits: UnavailableFn(Promise.resolve([])),\n  getRequestStatusForAuthorization: UnavailableFn(Promise.resolve(HKAuthorizationRequestStatus.unknown)),\n  getWheelchairUse: UnavailableFn(Promise.resolve(HKWheelchairUse.notSet)),\n  getWorkoutRoutes: UnavailableFn(Promise.resolve([])),\n  isHealthDataAvailable: async () => Promise.resolve(false),\n  queryCategorySamples: UnavailableFn(Promise.resolve([])) as unknown as QueryCategorySamplesFn,\n  queryCategorySamplesWithAnchor: UnavailableFn(Promise.resolve({\n    samples: [],\n    deletedSamples: [],\n    newAnchor: '',\n  })),\n  queryCorrelationSamples: UnavailableFn(Promise.resolve([])),\n  queryHeartbeatSeriesSamples: UnavailableFn(Promise.resolve([])),\n  queryHeartbeatSeriesSamplesWithAnchor: UnavailableFn(Promise.resolve({\n    samples: [],\n    deletedSamples: [],\n    newAnchor: '',\n  })),\n  queryQuantitySamples: UnavailableFn(Promise.resolve([])) as unknown as QueryQuantitySamplesFn,\n  queryQuantitySamplesWithAnchor: UnavailableFn(Promise.resolve({\n    samples: [],\n    deletedSamples: [],\n    newAnchor: '',\n  })),\n  queryStatisticsForQuantity: UnavailableFn(Promise.resolve({\n    averageQuantity: undefined,\n    maximumQuantity: undefined,\n    minimumQuantity: undefined,\n    sumQuantity: undefined,\n    mostRecentQuantity: undefined,\n    mostRecentQuantityDateInterval: undefined,\n    duration: undefined,\n  })),\n  queryStatisticsCollectionForQuantity: UnavailableFn(Promise.resolve([])),\n  queryActivitySummaryForQuantity: UnavailableFn(Promise.resolve([])),\n  queryWorkouts: UnavailableFn(Promise.resolve([])),\n  querySources: UnavailableFn(Promise.resolve([])),\n  requestAuthorization: UnavailableFn(Promise.resolve(false)),\n  deleteQuantitySample: UnavailableFn(Promise.resolve(false)),\n  deleteSamples: UnavailableFn(Promise.resolve(false)),\n  saveCategorySample: UnavailableFn(Promise.resolve(false)),\n  saveCorrelationSample: UnavailableFn(Promise.resolve(false)),\n  saveQuantitySample: UnavailableFn(Promise.resolve(false)),\n  saveWorkoutSample: UnavailableFn(Promise.resolve(false)),\n  subscribeToChanges: UnavailableFn(Promise.resolve(async () => Promise.resolve(false))),\n  useMostRecentCategorySample: UnavailableFn(null),\n  useMostRecentQuantitySample: UnavailableFn(null),\n  useMostRecentWorkout: UnavailableFn(null),\n  useSubscribeToChanges: UnavailableFn([null, () => null]),\n  useHealthkitAuthorization: UnavailableFn([null, async () => Promise.resolve(HKAuthorizationRequestStatus.unknown)] as const),\n  useIsHealthDataAvailable: () => false,\n  canAccessProtectedData: async () => Promise.resolve(false),\n}\n\nexport * from './types'\n\nexport default Healthkit\n"],"mappings":"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"}