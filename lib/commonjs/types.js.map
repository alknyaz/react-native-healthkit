{"version":3,"names":["_nativeTypes","require","Object","keys","forEach","key","exports","defineProperty","enumerable","get"],"sources":["types.ts"],"sourcesContent":["import type {\n  EnergyUnit,\n  HKActivitySummary,\n  HKCategorySampleRaw,\n  HKCategoryTypeIdentifier,\n  HKCorrelationRaw,\n  HKCorrelationTypeIdentifier,\n  HKDevice,\n  HKHeartbeatSeriesSampleRaw,\n  HKQuantityTypeIdentifier,\n  HKSourceRevision,\n  HKStatistics,\n  HKUnit,\n  HKWorkoutRaw,\n  LengthUnit,\n  MetadataMapperForQuantityIdentifier,\n  QueryActivitySummaryForQuantityRaw,\n  QueryStatisticsResponseRaw,\n  TimeUnit,\n  UnitForIdentifier,\n} from './native-types'\n\nexport * from './native-types'\n\nexport interface QueryWorkoutsOptions<\n  TEnergy extends HKUnit,\n  TDistance extends HKUnit\n> extends GenericQueryOptions {\n  readonly energyUnit?: TEnergy;\n  readonly distanceUnit?: TDistance;\n}\n\nexport interface HKCategorySample<\n  T extends HKCategoryTypeIdentifier = HKCategoryTypeIdentifier\n> extends Omit<HKCategorySampleRaw<T>, 'endDate' | 'startDate'> {\n  readonly startDate: Date;\n  readonly endDate: Date;\n}\n\nexport type GenericQueryOptions = {\n  readonly from?: Date;\n  readonly to?: Date;\n  readonly limit?: number;\n  readonly ascending?: boolean;\n  readonly anchor?: string\n};\n\nexport interface HKWorkout<\n  TEnergy extends EnergyUnit = EnergyUnit,\n  TDistance extends LengthUnit = LengthUnit\n> extends Omit<HKWorkoutRaw<TEnergy, TDistance>, 'endDate' | 'startDate'> {\n  readonly startDate: Date;\n  readonly endDate: Date;\n}\n\nexport interface HKHeartbeatSeriesSample extends Omit<HKHeartbeatSeriesSampleRaw, 'endDate' | 'startDate'> {\n  readonly startDate: Date;\n  readonly endDate: Date;\n}\n\nexport interface HKQuantitySample<\n  TIdentifier extends HKQuantityTypeIdentifier = HKQuantityTypeIdentifier,\n  TUnit extends UnitForIdentifier<TIdentifier> = UnitForIdentifier<TIdentifier>\n> {\n  readonly uuid: string;\n  readonly device?: HKDevice;\n  readonly quantityType: TIdentifier;\n  readonly quantity: number;\n  readonly unit: TUnit;\n  readonly metadata?: MetadataMapperForQuantityIdentifier<TIdentifier>;\n  readonly sourceRevision?: HKSourceRevision;\n  readonly startDate: Date;\n  readonly endDate: Date;\n}\n\nexport interface QueryStatisticsResponse<TIdentifier extends HKQuantityTypeIdentifier, TUnit extends UnitForIdentifier<TIdentifier> = UnitForIdentifier<TIdentifier>>\n  extends Omit<\n  QueryStatisticsResponseRaw<TIdentifier, TUnit>,\n  'mostRecentQuantityDateInterval'\n  > {\n  readonly mostRecentQuantityDateInterval?: { readonly from: Date; readonly to: Date };\n}\n\nexport type QueryStatisticsCollectionResponse<\n  TIdentifier extends HKQuantityTypeIdentifier,\n  TUnit extends UnitForIdentifier<TIdentifier>\n> = {\n  queryId: string,\n  data: (Omit<HKStatistics<TIdentifier, TUnit>, \"startDate\" | \"endDate\"> & {\n    startDate: Date,\n    endDate: Date\n  })[],\n  unsubscribe?: () => void\n}\n\nexport type QueryActivitySummaryResponse<\n  TEnergyUnit extends EnergyUnit,\n  TTimeUnit extends TimeUnit\n> = {\n  queryId: string,\n  data: (Omit<HKActivitySummary<TEnergyUnit, TTimeUnit>, \"startDate\"> & { startDate: Date })[],\n  unsubscribe?: () => void\n}\n\nexport type HKCategorySampleForSaving =Omit<HKCategorySample, 'device' | 'endDate' | 'startDate' | 'uuid'>\n\nexport type HKQuantitySampleForSaving =Omit<HKQuantitySample, 'device' | 'endDate' | 'startDate' | 'uuid'>\n\nexport interface HKCorrelation<TIdentifier extends HKCorrelationTypeIdentifier>\n  extends Omit<\n  HKCorrelationRaw<TIdentifier>,\n  'endDate' | 'objects' | 'startDate'\n  > {\n  readonly objects: readonly (HKCategorySample | HKQuantitySample)[];\n  readonly startDate: Date;\n  readonly endDate: Date;\n}\n"],"mappings":";;;;;AAsBA,IAAAA,YAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAH,YAAA,EAAAI,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAL,YAAA,CAAAK,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAT,YAAA,CAAAK,GAAA;IAAA;EAAA;AAAA"}